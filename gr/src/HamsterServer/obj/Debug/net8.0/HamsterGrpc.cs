// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: hamster.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace HSRM.CS.DistributedSystems.Hamster {
  public static partial class HamsterService
  {
    static readonly string __ServiceName = "hamster.HamsterService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterAddRequest> __Marshaller_hamster_HamsterAddRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterAddRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterAddResponse> __Marshaller_hamster_HamsterAddResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterAddResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterCollectRequest> __Marshaller_hamster_HamsterCollectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterCollectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterCollectResponse> __Marshaller_hamster_HamsterCollectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterCollectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterHowIsDoingRequest> __Marshaller_hamster_HamsterHowIsDoingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterHowIsDoingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterHowIsDoingResponse> __Marshaller_hamster_HamsterHowIsDoingResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterHowIsDoingResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterLookUpRequest> __Marshaller_hamster_HamsterLookUpRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterLookUpRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterLookUpResponse> __Marshaller_hamster_HamsterLookUpResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterLookUpResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterGiveTreatsRequest> __Marshaller_hamster_HamsterGiveTreatsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterGiveTreatsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterGiveTreatsResponse> __Marshaller_hamster_HamsterGiveTreatsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterGiveTreatsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterReadEntryRequest> __Marshaller_hamster_HamsterReadEntryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterReadEntryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterReadEntryResponse> __Marshaller_hamster_HamsterReadEntryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterReadEntryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterSearchRequest> __Marshaller_hamster_HamsterSearchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterSearchRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HSRM.CS.DistributedSystems.Hamster.HamsterSearchResponse> __Marshaller_hamster_HamsterSearchResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HSRM.CS.DistributedSystems.Hamster.HamsterSearchResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterAddRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterAddResponse> __Method_AddHamster = new grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterAddRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterAddResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddHamster",
        __Marshaller_hamster_HamsterAddRequest,
        __Marshaller_hamster_HamsterAddResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterCollectRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterCollectResponse> __Method_Collect = new grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterCollectRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterCollectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Collect",
        __Marshaller_hamster_HamsterCollectRequest,
        __Marshaller_hamster_HamsterCollectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterHowIsDoingRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterHowIsDoingResponse> __Method_HowIsDoing = new grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterHowIsDoingRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterHowIsDoingResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "HowIsDoing",
        __Marshaller_hamster_HamsterHowIsDoingRequest,
        __Marshaller_hamster_HamsterHowIsDoingResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterLookUpRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterLookUpResponse> __Method_LookUp = new grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterLookUpRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterLookUpResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LookUp",
        __Marshaller_hamster_HamsterLookUpRequest,
        __Marshaller_hamster_HamsterLookUpResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterGiveTreatsRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterGiveTreatsResponse> __Method_GiveTreats = new grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterGiveTreatsRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterGiveTreatsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GiveTreats",
        __Marshaller_hamster_HamsterGiveTreatsRequest,
        __Marshaller_hamster_HamsterGiveTreatsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterReadEntryRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterReadEntryResponse> __Method_ReadEntry = new grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterReadEntryRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterReadEntryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadEntry",
        __Marshaller_hamster_HamsterReadEntryRequest,
        __Marshaller_hamster_HamsterReadEntryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterSearchRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterSearchResponse> __Method_Search = new grpc::Method<global::HSRM.CS.DistributedSystems.Hamster.HamsterSearchRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterSearchResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Search",
        __Marshaller_hamster_HamsterSearchRequest,
        __Marshaller_hamster_HamsterSearchResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HSRM.CS.DistributedSystems.Hamster.HamsterReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of HamsterService</summary>
    [grpc::BindServiceMethod(typeof(HamsterService), "BindService")]
    public abstract partial class HamsterServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::HSRM.CS.DistributedSystems.Hamster.HamsterAddResponse> AddHamster(global::HSRM.CS.DistributedSystems.Hamster.HamsterAddRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::HSRM.CS.DistributedSystems.Hamster.HamsterCollectResponse> Collect(global::HSRM.CS.DistributedSystems.Hamster.HamsterCollectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::HSRM.CS.DistributedSystems.Hamster.HamsterHowIsDoingResponse> HowIsDoing(global::HSRM.CS.DistributedSystems.Hamster.HamsterHowIsDoingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::HSRM.CS.DistributedSystems.Hamster.HamsterLookUpResponse> LookUp(global::HSRM.CS.DistributedSystems.Hamster.HamsterLookUpRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::HSRM.CS.DistributedSystems.Hamster.HamsterGiveTreatsResponse> GiveTreats(global::HSRM.CS.DistributedSystems.Hamster.HamsterGiveTreatsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::HSRM.CS.DistributedSystems.Hamster.HamsterReadEntryResponse> ReadEntry(global::HSRM.CS.DistributedSystems.Hamster.HamsterReadEntryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::HSRM.CS.DistributedSystems.Hamster.HamsterSearchResponse> Search(global::HSRM.CS.DistributedSystems.Hamster.HamsterSearchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(HamsterServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddHamster, serviceImpl.AddHamster)
          .AddMethod(__Method_Collect, serviceImpl.Collect)
          .AddMethod(__Method_HowIsDoing, serviceImpl.HowIsDoing)
          .AddMethod(__Method_LookUp, serviceImpl.LookUp)
          .AddMethod(__Method_GiveTreats, serviceImpl.GiveTreats)
          .AddMethod(__Method_ReadEntry, serviceImpl.ReadEntry)
          .AddMethod(__Method_Search, serviceImpl.Search).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, HamsterServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddHamster, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::HSRM.CS.DistributedSystems.Hamster.HamsterAddRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterAddResponse>(serviceImpl.AddHamster));
      serviceBinder.AddMethod(__Method_Collect, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::HSRM.CS.DistributedSystems.Hamster.HamsterCollectRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterCollectResponse>(serviceImpl.Collect));
      serviceBinder.AddMethod(__Method_HowIsDoing, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::HSRM.CS.DistributedSystems.Hamster.HamsterHowIsDoingRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterHowIsDoingResponse>(serviceImpl.HowIsDoing));
      serviceBinder.AddMethod(__Method_LookUp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::HSRM.CS.DistributedSystems.Hamster.HamsterLookUpRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterLookUpResponse>(serviceImpl.LookUp));
      serviceBinder.AddMethod(__Method_GiveTreats, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::HSRM.CS.DistributedSystems.Hamster.HamsterGiveTreatsRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterGiveTreatsResponse>(serviceImpl.GiveTreats));
      serviceBinder.AddMethod(__Method_ReadEntry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::HSRM.CS.DistributedSystems.Hamster.HamsterReadEntryRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterReadEntryResponse>(serviceImpl.ReadEntry));
      serviceBinder.AddMethod(__Method_Search, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::HSRM.CS.DistributedSystems.Hamster.HamsterSearchRequest, global::HSRM.CS.DistributedSystems.Hamster.HamsterSearchResponse>(serviceImpl.Search));
    }

  }
}
#endregion
